/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import UserInterface.ManageCustomerBookings.CustomerDetailsJPanel;
import Business.*;
import UserInterface.ManageAirlines.ManageAirplanes.ViewAirplaneJPanel;
import UserInterface.ManageCustomerBookings.ManageBookingsJPanel;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Vaibhavi
 */
public class BookingsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookingsJPanel
     */
    private JPanel userProcessContainer;
    private TravelAgency travelAgency;
    
    public BookingsJPanel(JPanel userProcessContainer, TravelAgency travelAgency) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.travelAgency = travelAgency;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        cheapFlightsJTable = new javax.swing.JTable();
        destinationTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sourceTextField = new javax.swing.JTextField();
        searchFlightsBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        departDateTextField = new javax.swing.JTextField();
        refreshBtn = new javax.swing.JButton();
        bookFlightTicketsBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Flight Bookings ");

        cheapFlightsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "Source", "Destination", "Departure Time", "Airliner Rate", "Seats Available"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(cheapFlightsJTable);

        destinationTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                destinationTextFieldKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Destination :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Source :");

        sourceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sourceTextFieldKeyTyped(evt);
            }
        });

        searchFlightsBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchFlightsBtn.setText("Search Best Flights");
        searchFlightsBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        searchFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlightsBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Departure Date :");

        departDateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                departDateTextFieldKeyTyped(evt);
            }
        });

        refreshBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        bookFlightTicketsBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bookFlightTicketsBtn.setText("Book Flight Tickets");
        bookFlightTicketsBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        bookFlightTicketsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookFlightTicketsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(47, 47, 47)
                                .addComponent(sourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchFlightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(departDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bookFlightTicketsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sourceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(departDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchFlightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bookFlightTicketsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void destinationTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_destinationTextFieldKeyTyped

        char ch = evt.getKeyChar();
        if(!(Character.isAlphabetic(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isDigit(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter alphabetical values only.");
        }
    }//GEN-LAST:event_destinationTextFieldKeyTyped

    private void sourceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sourceTextFieldKeyTyped

        char ch = evt.getKeyChar();
        if(!(Character.isAlphabetic(ch)) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE))
        {
            evt.consume();
            if(Character.isDigit(ch) || Character.isSpaceChar(ch))
            JOptionPane.showMessageDialog(null,"Enter alphabetical values only.");
        }
    }//GEN-LAST:event_sourceTextFieldKeyTyped

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void searchFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlightsBtnActionPerformed
        
        String departDate = departDateTextField.getText();
        String source = sourceTextField.getText();
        String destination = destinationTextField.getText();
        ArrayList<Flights> flightList = new ArrayList<Flights>();
        DefaultTableModel defaultTableModel = (DefaultTableModel)cheapFlightsJTable.getModel();
        defaultTableModel.setRowCount(0);
        
        if(sourceTextField.getText().isEmpty() ||
            destinationTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter the fileds for search.","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            for(Airliner airliner : travelAgency.getAirlinerCatalog())
            {
                for(Airplane airplane : airliner.getAirplaneCatalog())
                {
                    for(Flights flight : airplane.getFlightCatalog())
                    {
                        if(flight.getSource().equalsIgnoreCase(source) && flight.getDestination().equalsIgnoreCase(destination)
                            && flight.getFlightDate().equals(departDate))
                        {
                            flightList.add(flight);
                        }
                    }
                }
            }
            flightList = sortFlightList(flightList);
            for(Flights flight : flightList)
            {
                Object row[] = new Object[6];
                row[0] = flight;
                row[1] = flight.getSource();
                row[2] = flight.getDestination();
                row[3] = flight.getFlightTime();
                row[4] = flight.getFlightRate();
                row[5] = flight.getSeatsRemaining();
                defaultTableModel.addRow(row);
            }
            
        }
    }//GEN-LAST:event_searchFlightsBtnActionPerformed

    private ArrayList<Flights> sortFlightList(ArrayList<Flights> flightList)
    {
        Collections.sort(flightList);
        return flightList;
    }
    
    private void departDateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_departDateTextFieldKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_departDateTextFieldKeyTyped

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        
        DefaultTableModel defaultTableModel;
        sourceTextField.setText("");
        destinationTextField.setText("");
        departDateTextField.setText("");
        while(cheapFlightsJTable.getRowCount() > 0)
        {
            defaultTableModel = (DefaultTableModel)cheapFlightsJTable.getModel();
            defaultTableModel.setRowCount(0);
        }
        
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void bookFlightTicketsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookFlightTicketsBtnActionPerformed
        
        int selectedRow = cheapFlightsJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row from table to book seats","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Flights flight = (Flights)cheapFlightsJTable.getValueAt(selectedRow, 0);
            ManageBookingsJPanel manageBookingsJPanel = new ManageBookingsJPanel(userProcessContainer,flight);
            userProcessContainer.add("ManageBookingsJPanel",manageBookingsJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_bookFlightTicketsBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton bookFlightTicketsBtn;
    private javax.swing.JTable cheapFlightsJTable;
    private javax.swing.JTextField departDateTextField;
    private javax.swing.JTextField destinationTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchFlightsBtn;
    private javax.swing.JTextField sourceTextField;
    // End of variables declaration//GEN-END:variables
}
