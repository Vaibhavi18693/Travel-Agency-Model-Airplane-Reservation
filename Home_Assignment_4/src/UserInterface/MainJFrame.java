/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.*;
import UserInterface.ManageAirlines.ManageAirlinerJPanel;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author Vaibhavi
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    private TravelAgency travelAgency;
    private String airlinerNameCsvFile = "C:\\Users\\Vaibhavi\\Desktop\\CSV\\AirlinerName.csv";
    private String airplaneCsvFile = "C:\\Users\\Vaibhavi\\Desktop\\CSV\\Airplane_Details.csv";
    private String flightDetailsCsvFile = "C:\\Users\\Vaibhavi\\Desktop\\CSV\\Flight_Details.csv";
    
    public MainJFrame() {
        initComponents();
        travelAgency = new TravelAgency();
        readAirlinerCsv(airlinerNameCsvFile);
        readAirplaneCsv(airplaneCsvFile);
        readFlightsCsv(flightDetailsCsvFile);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        controlPanel = new javax.swing.JPanel();
        travelAgencyBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        bookingsBtn = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        controlPanel.setBackground(new java.awt.Color(0, 204, 153));

        travelAgencyBtn.setBackground(new java.awt.Color(153, 153, 153));
        travelAgencyBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        travelAgencyBtn.setText("Travel Agency");
        travelAgencyBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        travelAgencyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                travelAgencyBtnActionPerformed(evt);
            }
        });

        searchBtn.setBackground(new java.awt.Color(153, 153, 153));
        searchBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        bookingsBtn.setBackground(new java.awt.Color(153, 153, 153));
        bookingsBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bookingsBtn.setText("Bookings");
        bookingsBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        bookingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bookingsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(travelAgencyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(travelAgencyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(bookingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(controlPanel);

        userProcessContainer.setBackground(new java.awt.Color(0, 102, 102));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(userProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        SearchJPanel searchJPanel = new SearchJPanel(userProcessContainer,travelAgency);
        userProcessContainer.add("SearchJPanel",searchJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void bookingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingsBtnActionPerformed
        // TODO add your handling code here:
        BookingsJPanel bookingsJPanel = new BookingsJPanel(userProcessContainer,travelAgency);
        userProcessContainer.add("BookingsJPanel",bookingsJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_bookingsBtnActionPerformed

    private void travelAgencyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_travelAgencyBtnActionPerformed
        
        TravelAgencyJPanel travelAgencyJPanel = new TravelAgencyJPanel(userProcessContainer, travelAgency);
        userProcessContainer.add("TravelAgencyJPanel",travelAgencyJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_travelAgencyBtnActionPerformed

    private void readAirlinerCsv(String airlinerNameCsvFile)
    {
        String csvFile = airlinerNameCsvFile;
        BufferedReader br = null;
        String line = "";
        String csvSplitBy = ",";
        Airliner airliner;
        
        try
        {
            br = new BufferedReader(new FileReader(csvFile));
            br.readLine();
            while((line = br.readLine()) != null)
            {
                String[] airlinerDetails = line.split(csvSplitBy);
                airliner = travelAgency.addAirliner();
                airliner.setAirlinerName(airlinerDetails[0]);
                airliner.setAirlinerOwner(airlinerDetails[1]);
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    private void readAirplaneCsv(String airplaneCsvFile)
    {
        String csvFile = airplaneCsvFile;
        BufferedReader br = null;
        String line = "";
        String csvSplitBy = ",";
        String airlinerName;
        Airplane airplane;
        
        try
        {
            br = new BufferedReader(new FileReader(csvFile));
            br.readLine();
            while((line = br.readLine()) != null)
            {
                String[] airplaneDetails = line.split(csvSplitBy);
                airlinerName = airplaneDetails[0];
                
                for(Airliner airliner : travelAgency.getAirlinerCatalog())
                {
                    if(airliner.getAirlinerName().equalsIgnoreCase(airlinerName))
                    {
                        airplane = airliner.addAirplane();
                        airplane.setSerialNum(Long.parseLong(airplaneDetails[1]));
                        airplane.setModelNum(Integer.parseInt(airplaneDetails[2]));
                        airplane.setManufacturer(airplaneDetails[3]);
                        airplane.setYearOfManufacture(Integer.parseInt(airplaneDetails[4]));
                        break;
                    }
                }
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    private void readFlightsCsv(String flightDetailsCsv)
    {
        String csvFile = flightDetailsCsv;
        BufferedReader br = null;
        String line = "";
        String csvSplitBy = ",";
        String airlinerName;
        long airplaneSerialNum;
        Flights flight;
        Seats seats;
        int seatRow, seatColumn;
        
        try
        {
            br = new BufferedReader(new FileReader(csvFile));
            br.readLine();
            while((line = br.readLine()) != null)
            {
                String[] flightsDetails = line.split(csvSplitBy);
                airlinerName = flightsDetails[0];
                airplaneSerialNum = Long.parseLong(flightsDetails[1]);
                
                outerLoop:
                for(Airliner airliner : travelAgency.getAirlinerCatalog())
                {
                    if(airliner.getAirlinerName().equalsIgnoreCase(airlinerName))
                    {
                        for(Airplane airplane : airliner.getAirplaneCatalog())
                        {
                            if(airplane.getSerialNum() == airplaneSerialNum)
                            {
                                flight = airplane.addFlight();
                                flight.setSource(flightsDetails[2]);
                                flight.setDestination(flightsDetails[3]);
                                flight.setFlightNum(flightsDetails[4]);
                                flight.setFlightDate(flightsDetails[5]);
                                flight.setFlightTime(flightsDetails[6]);
                                flight.setFlightRate(Double.parseDouble(flightsDetails[7]));
                                flight.setDateTime(flight.getFlightDate()+" "+flight.getFlightTime());
                                
                                seatRow = Integer.parseInt(flightsDetails[8]);
                                seatColumn = Integer.parseInt(flightsDetails[9]);
                                flight.setSeatsAvailable(new Seats[seatRow][seatColumn]);
                                
                                flight.setTotalSeats(Integer.parseInt(flightsDetails[10]));
                                flight.setSeatsRemaining(Integer.parseInt(flightsDetails[10]));
                                
                                allocateSeats(flight);
                                break outerLoop;
                            }
                        }
                    }
                }
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    public void allocateSeats(Flights flights)
    {
        Seats seats[][] = flights.getSeatsAvailable();
        int totalSeats=0;
        
        for(int i=0;i<seats.length;i++)
        {
            for(int j=0;j<seats[0].length;j++)
            {
                seats[i][j] = new Seats();
                switch(j)
                {
                    case 0:
                        seats[i][j].setSeatRow(i+1);
                        seats[i][j].setSeatColumn("A");
                        seats[i][j].setSeatPrice(500);
                        seats[i][j].setSeatType("Window");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                    case 1:
                        seats[i][j].setSeatRow(i+1);
                        seats[i][j].setSeatColumn("B");
                        seats[i][j].setSeatPrice(400);
                        seats[i][j].setSeatType("Middle");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                    case 2:
                        seats[i][j].setSeatRow(i+1);
                        seats[i][j].setSeatColumn("C");
                        seats[i][j].setSeatPrice(300);
                        seats[i][j].setSeatType("Aisle");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                    case 3:
                        seats[i][j].setSeatRow(i+1);
                        seats[i][j].setSeatColumn("D");
                        seats[i][j].setSeatPrice(300);
                        seats[i][j].setSeatType("Aisle");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                    case 4:
                        seats[i][j].setSeatRow(i+1);
                        seats[i][j].setSeatColumn("E");
                        seats[i][j].setSeatPrice(400);
                        seats[i][j].setSeatType("Middle");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                    case 5:
                        seats[i][j].setSeatRow(i+1);    
                        seats[i][j].setSeatColumn("F");
                        seats[i][j].setSeatPrice(500);
                        seats[i][j].setSeatType("Window");
                        seats[i][j].setBookingStatus(false);
                        seats[i][j].setSeatAlloted(seats[i][j].getSeatRow()+seats[i][j].getSeatColumn());
                        totalSeats++;
                        break;
                } 
            }
        }
        flights.setTotalSeats(totalSeats);
        flights.setSeatsRemaining(totalSeats);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookingsBtn;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JButton travelAgencyBtn;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables
}
