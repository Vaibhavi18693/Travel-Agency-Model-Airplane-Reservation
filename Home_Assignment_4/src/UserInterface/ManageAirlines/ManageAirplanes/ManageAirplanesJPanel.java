/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirlines.ManageAirplanes;

import Business.*;
import UserInterface.ManageAirlines.ManageAirlinerJPanel;
import java.awt.CardLayout;
import javax.swing.JPanel;
import UserInterface.ManageAirlines.ManageAirplanes.ManageFlights.ManageFlightsJPanel;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Vaibhavi
 */
public class ManageAirplanesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAirplane
     */
    private JPanel userProcessContainer;
    private TravelAgency travelAgency;
    private Airliner airliner;
    
    public ManageAirplanesJPanel(JPanel userProcessContainer, Airliner airliner) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.airliner = airliner;
        populateTable();
    }

    public void populateTable()
    {
        DefaultTableModel defaultTableModel = (DefaultTableModel)airplaneListJTable.getModel();
        defaultTableModel.setRowCount(0);
        
         for(Airplane airplane : airliner.getAirplaneCatalog())
        {
            Object[] row = new Object[5];
            row[0] = airplane;
            row[1] = airplane.getModelNum();
            row[2] = airplane.getSerialNum();
            row[3] = airplane.getYearOfManufacture();
            row[4] = airplane.totalFlights(airplane.getFlightCatalog());
            defaultTableModel.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createAirplaneBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        airplaneListJTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();
        viewAirplaneBtn = new javax.swing.JButton();
        manageFlightsBtn = new javax.swing.JButton();
        removeAirplaneBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));
        setForeground(new java.awt.Color(0, 102, 102));
        setPreferredSize(new java.awt.Dimension(700, 500));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Airplanes");

        createAirplaneBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        createAirplaneBtn.setText("Add Airplane");
        createAirplaneBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        createAirplaneBtn.setRolloverEnabled(false);
        createAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAirplaneBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "List Of Airplanes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        airplaneListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "Model Number", "Serial Number", "Year Of Manufacture", "Total Flights"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(airplaneListJTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backBtn.setText("<< Back");
        backBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        viewAirplaneBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        viewAirplaneBtn.setText("View Airplane");
        viewAirplaneBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        viewAirplaneBtn.setRolloverEnabled(false);
        viewAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAirplaneBtnActionPerformed(evt);
            }
        });

        manageFlightsBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        manageFlightsBtn.setText("Manage Flights");
        manageFlightsBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        manageFlightsBtn.setRolloverEnabled(false);
        manageFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageFlightsBtnActionPerformed(evt);
            }
        });

        removeAirplaneBtn.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        removeAirplaneBtn.setText("Remove Airplane");
        removeAirplaneBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.darkGray, null, null));
        removeAirplaneBtn.setRolloverEnabled(false);
        removeAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAirplaneBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(viewAirplaneBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(createAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(manageFlightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(removeAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manageFlightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewAirplaneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manageFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageFlightsBtnActionPerformed
        
        int selectedRow = airplaneListJTable.getSelectedRow();
        
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select airplane from table to manage flight details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Airplane airplane = (Airplane)airplaneListJTable.getValueAt(selectedRow, 0);
            ManageFlightsJPanel manageFlightsJPanel = new ManageFlightsJPanel(userProcessContainer,airplane);
            userProcessContainer.add("ManageFlightsJPanel",manageFlightsJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } 
    }//GEN-LAST:event_manageFlightsBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageAirlinerJPanel manageAirlinerJPanel = (ManageAirlinerJPanel)component;
        manageAirlinerJPanel.populateTable();
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void createAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAirplaneBtnActionPerformed
        
        CreateAirplaneJPanel createAirplaneJPanel = new CreateAirplaneJPanel(userProcessContainer,airliner);
        userProcessContainer.add("CreateAirplaneJPanel",createAirplaneJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_createAirplaneBtnActionPerformed

    private void viewAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAirplaneBtnActionPerformed
        
        int selectedRow = airplaneListJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row from table to view details","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Airplane airplane = (Airplane)airplaneListJTable.getValueAt(selectedRow, 0);
            ViewAirplaneJPanel viewAirplaneJPanel = new ViewAirplaneJPanel(userProcessContainer,airplane);
            userProcessContainer.add("ViewAirplaneJPanel",viewAirplaneJPanel);
            CardLayout layout = (CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_viewAirplaneBtnActionPerformed

    private void removeAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAirplaneBtnActionPerformed
        
        int selectedRow = airplaneListJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select row from table to delete airplane","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Airplane airplane = (Airplane)airplaneListJTable.getValueAt(selectedRow, 0);
            airliner.deleteAirplane(airplane);
            populateTable();
        }
    }//GEN-LAST:event_removeAirplaneBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable airplaneListJTable;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton createAirplaneBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton manageFlightsBtn;
    private javax.swing.JButton removeAirplaneBtn;
    private javax.swing.JButton viewAirplaneBtn;
    // End of variables declaration//GEN-END:variables
}
